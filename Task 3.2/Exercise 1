# 90%
# Программа отлично работает, с одним исключением: При попытки использовать переводчик Multillect в переведенном тексте возникают html-символы. К утру Я надеюсь избавиться от этого. И проверить на PEP8
import requests


def path_sel():
    pa_f = input("Пожалуйста, укажите путь к файлу ")
    if pa_f == '':
        pa_f = path_one
    pa_s = input("Пожалуйста, укажите путь к файлу с результатом ")
    if pa_s == '':
        pa_s = path_two
    return [pa_f, pa_s]


def lan_sel():
    print(
        'Возможные языки:'
        'немецкий (de), испанский(es), французский(fr) и русский(ru)'
    )
    la_f = input("Пожалуйста, укажите язык с которого перевести ")
    la_s = input("Пожалуйста, укажите язык на который перевести (по-умолчанию русский) ")
    if la_s == '':
        la_s = 'ru'
    return [la_f, la_s]


def plat_sel(l_x, l_y, rf):
    link = 'https://translate.yandex.net/api/v1/tr.json/translate'
    opt_f = 0
    opt_s = 0
    text_word = ''
    pl = input("Пожалуйста, выберете переводчик: Яндекс или Multillect (y/m) ")
    if pl == 'y':
        link = 'https://translate.yandex.net/api/v1/tr.json/translate'
        opt_f = {
            'id': '72d6fbd7.5ab0bf36.0ab3de8b-3-0',
            'srv': 'tr-text',
            'lang': '{}-{}'.format(l_x, l_y),
            'reason': 'auto'
        }
        opt_s = {
            'text': rf
        }
    elif pl == 'm':
        link = 'https://translate.multillect.com/form.json'
        opt_f = {
            'from': l_x,
            'to': l_y,
            'text': rf
        }
        opt_s = ''
    return [link, opt_f, opt_s, pl]

def read_file(link):
    tex = ''
    with open(link, encoding='utf-8') as f:
        tex = f.read()
        return tex

def write_file(link, let, pl):
    if pl == 'y':
        with open(link, 'w', encoding='utf-8') as f:
            f.write(''.join(let['text']))
    elif pl == 'm':
        with open(link, 'w', encoding='utf-8') as f:
            f.write(''.join(let['result']['translations']))


def trans():
    ways = path_sel()
    or_text = read_file(ways[0])
    lans = lan_sel()
    inf = plat_sel(lans[0], lans[1], or_text)
    url = inf[0]
    req=requests.request(
        'post',
        url,
        params=inf[1],
        data=inf[2]
    )
    write_file(ways[1], req.json(), inf[3])

trans()
